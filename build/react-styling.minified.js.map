{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-styling.minified.js","webpack:///webpack/bootstrap ac8674723e6f1f30b63a","webpack:///G:/work/react-styling/source/index.js","webpack:///G:/work/react-styling/source/helpers.js","webpack:///G:/work/react-styling/source/tabulator.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","styler","strings","style","i","length","_len","arguments","values","Array","_key","_helpers","exists","parse_style_json_object","text","replace","lines","split","tabulator","_tabulator2","determine_tabulation","style_json","parse_node_json","extract_tabulation","expand_modifier_style_classes","styles","children_lines","style_object","map","parts","key","trim","value","character","substring","toUpperCase","reduce","extend","parse_lines","forEach","line","filter","is_blank","node_entry_lines","index","tabs","node_ending_lines","line_index","shift","push","from_to","zip","each_node_lines","slice","name","is_a_modifier","starts_with","ends_with","colon_index","indexOf","json","_is_a_modifier","nodes","node","get_node_style","Object","keys","property","style_property","defineProperty","_tabulator","string","what","lastIndexOf","repeat","times","result","a","b","_","_x","_x2","_x3","_this","_arguments","_again","to","from","or_more","parameters","last","intermediary_result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","prototype","_step","_iterator","Symbol","iterator","next","done","err","pop","apply","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","Tabulator","tab","how_much","symbol","matches","match","regexp","original_line","calculate_indentation","reduce_indentation","Error","minimum_indentation","minimum","Math","min","Infinity","calculate_leading_spaces","counter","substract","pair","RegExp","tab_width","abs","spaced_tab"],"mappings":"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","file":"react-styling.minified.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-styling\"] = factory();\n\telse\n\t\troot[\"react-styling\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-styling\"] = factory();\n\telse\n\t\troot[\"react-styling\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\texports['default'] = styler;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _helpers = __webpack_require__(1);\n\t\n\tvar _tabulator = __webpack_require__(2);\n\t\n\tvar _tabulator2 = _interopRequireDefault(_tabulator);\n\t\n\t// using ES6 template strings\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\n\t\n\tfunction styler(strings) {\n\t\tvar style = '';\n\t\n\t\t// restore the whole string from \"strings\" and \"values\" parts\n\t\tvar i = 0;\n\t\twhile (i < strings.length) {\n\t\t\tstyle += strings[i];\n\t\n\t\t\tfor (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\tvalues[_key - 1] = arguments[_key];\n\t\t\t}\n\t\n\t\t\tif ((0, _helpers.exists)(values[i])) {\n\t\t\t\tstyle += values[i];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\n\t\treturn parse_style_json_object(style);\n\t}\n\t\n\t// converts text to JSON object\n\tfunction parse_style_json_object(text) {\n\t\t// remove multiline comments\n\t\ttext = text.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, '');\n\t\n\t\t// ignore curly braces for now.\n\t\t// maybe support curly braces along with tabulation in future\n\t\ttext = text.replace(/[\\{\\}]/g, '');\n\t\n\t\tvar lines = text.split('\\n');\n\t\n\t\t// helper class for dealing with tabulation\n\t\tvar tabulator = new _tabulator2['default'](_tabulator2['default'].determine_tabulation(lines));\n\t\n\t\t// parse text into JSON object\n\t\tvar style_json = parse_node_json([], tabulator.extract_tabulation(lines));\n\t\n\t\t// expand \"modifier\" style classes\n\t\treturn expand_modifier_style_classes(style_json);\n\t}\n\t\n\t// (recursive function)\n\t// parse child nodes' lines (and this node's styles) into this node's style JSON object\n\tfunction parse_node_json(styles, children_lines) {\n\t\t// transform this node's style lines from text to JSON properties and their values\n\t\tvar style_object = styles.map(function (style) {\n\t\t\tvar parts = style.split(':');\n\t\n\t\t\tvar key = parts[0].trim();\n\t\t\tvar value = parts[1].trim();\n\t\n\t\t\t// support old CSS syntax\n\t\t\tvalue = value.replace(/;$/, '');\n\t\n\t\t\t// transform dashed key to camelCase key (it's required by React)\n\t\t\tkey = key.replace(/([-]{1}[a-z]{1})/g, function (character) {\n\t\t\t\treturn character.substring(1).toUpperCase();\n\t\t\t});\n\t\n\t\t\treturn { key: key, value: value };\n\t\t})\n\t\t// combine the styles into a JSON object\n\t\t.reduce(function (styles, style) {\n\t\t\tstyles[style.key] = style.value;\n\t\t\treturn styles;\n\t\t}, {});\n\t\n\t\t// parse child nodes and add them to this node's JSON object\n\t\treturn (0, _helpers.extend)(style_object, parse_lines(children_lines));\n\t}\n\t\n\t// parses lines of text into a JSON object\n\t// (recursive function)\n\tfunction parse_lines(lines) {\n\t\t// return empty object if there are no lines\n\t\tif (lines.length === 0) {\n\t\t\treturn {};\n\t\t}\n\t\n\t\t// remove single line comments\n\t\tlines.forEach(function (line) {\n\t\t\t// remove single line comments\n\t\t\tline.line = line.line.replace(/\\/\\/.*/, '');\n\t\t\t// remove any trailing whitespace\n\t\t\tline.line = line.line.trim();\n\t\t});\n\t\n\t\t// filter out blank lines\n\t\tlines = lines.filter(function (line) {\n\t\t\treturn !(0, _helpers.is_blank)(line.line);\n\t\t});\n\t\n\t\t// determine lines with indentation = 1 (child node entry lines)\n\t\tvar node_entry_lines = lines.map(function (line, index) {\n\t\t\treturn { tabs: line.tabs, index: index };\n\t\t}).filter(function (line) {\n\t\t\treturn line.tabs === 1;\n\t\t}).map(function (line) {\n\t\t\treturn line.index;\n\t\t});\n\t\n\t\t// deduce corresponding child node ending lines\n\t\tvar node_ending_lines = node_entry_lines.map(function (line_index) {\n\t\t\treturn line_index - 1;\n\t\t});\n\t\tnode_ending_lines.shift();\n\t\tnode_ending_lines.push(lines.length - 1);\n\t\n\t\t// each node boundaries in terms of starting line index and ending line index\n\t\tvar from_to = (0, _helpers.zip)(node_entry_lines, node_ending_lines);\n\t\n\t\t// now lines are split by nodes\n\t\tvar each_node_lines = from_to.map(function (from_to) {\n\t\t\treturn lines.slice(from_to[0], from_to[1] + 1);\n\t\t});\n\t\n\t\treturn each_node_lines.map(function (lines) {\n\t\t\t// the first line is the node's name\n\t\t\tvar name = lines.shift().line;\n\t\n\t\t\t// is it a \"modifier\" style class\n\t\t\tvar is_a_modifier = false;\n\t\n\t\t\t// detect modifier style classes\n\t\t\tif ((0, _helpers.starts_with)(name, '&')) {\n\t\t\t\tname = name.substring('&'.length);\n\t\t\t\tis_a_modifier = true;\n\t\t\t}\n\t\n\t\t\t// support old-school CSS syntax\n\t\t\tif ((0, _helpers.starts_with)(name, '.')) {\n\t\t\t\tname = name.substring('.'.length);\n\t\t\t}\n\t\n\t\t\t// if someone forgot a trailing colon in the style class name - trim it\n\t\t\t// (or maybe these are Python people)\n\t\t\tif ((0, _helpers.ends_with)(name, ':')) {\n\t\t\t\tname = name.substring(0, name.length - ':'.length)\n\t\t\t\t// throw new Error(`Remove the trailing colon at line: ${original_line}`)\n\t\t\t\t;\n\t\t\t}\n\t\n\t\t\t// node's own styles\n\t\t\tvar styles = lines.filter(function (line) {\n\t\t\t\t// own styles always have indentation of 2\n\t\t\t\tif (line.tabs !== 2) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\t// detect generic css style line\n\t\t\t\tvar colon_index = line.line.indexOf(':');\n\t\t\t\treturn colon_index > 0 && colon_index < line.line.length - 1 && !(0, _helpers.starts_with)(line.line, '@');\n\t\t\t});\n\t\n\t\t\t// this node child nodes and all their children, etc\n\t\t\tvar children_lines = lines.filter(function (line) {\n\t\t\t\treturn styles.indexOf(line) < 0;\n\t\t\t});\n\t\n\t\t\t// convert from line info to lines\n\t\t\tstyles = styles.map(function (line) {\n\t\t\t\treturn line.line;\n\t\t\t});\n\t\t\tchildren_lines.forEach(function (line) {\n\t\t\t\treturn line.tabs--;\n\t\t\t});\n\t\n\t\t\t// generate JSON object for this node\n\t\t\tvar json = parse_node_json(styles, children_lines);\n\t\n\t\t\tif (is_a_modifier) {\n\t\t\t\tjson._is_a_modifier = true;\n\t\t\t}\n\t\n\t\t\treturn { name: name, json: json };\n\t\t}).reduce(function (nodes, node) {\n\t\t\tnodes[node.name] = node.json;\n\t\t\treturn nodes;\n\t\t}, {});\n\t}\n\t\n\t// expand modifier style classes\n\tfunction expand_modifier_style_classes(node) {\n\t\tvar style = get_node_style(node);\n\t\n\t\tObject.keys(node)\n\t\t// get all modifier style class nodes\n\t\t.filter(function (name) {\n\t\t\treturn typeof node[name] === 'object' && node[name]._is_a_modifier;\n\t\t})\n\t\t// for each modifier style class node\n\t\t.forEach(function (name) {\n\t\t\t// delete the modifier flags\n\t\t\tdelete node[name]._is_a_modifier;\n\t\n\t\t\t// include parent node styles into the modifier style class node\n\t\t\tnode[name] = (0, _helpers.extend)({}, style, node[name]);\n\t\t});\n\t\n\t\tObject.keys(node)\n\t\t// get all style class nodes\n\t\t.filter(function (name) {\n\t\t\treturn typeof node[name] === 'object';\n\t\t})\n\t\t// for each style class node\n\t\t.forEach(function (name) {\n\t\t\t// recurse\n\t\t\texpand_modifier_style_classes(node[name]);\n\t\t});\n\t\n\t\treturn node;\n\t}\n\t\n\t// extracts root css styles of this style class node\n\tfunction get_node_style(node) {\n\t\treturn Object.keys(node)\n\t\t// get all CSS styles of this style class node\n\t\t.filter(function (property) {\n\t\t\treturn typeof node[property] !== 'object';\n\t\t})\n\t\t// for each CSS style of this style class node\n\t\t.reduce(function (style, style_property) {\n\t\t\tstyle[style_property] = node[style_property];\n\t\t\treturn style;\n\t\t}, {});\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// if the variable is defined\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\texports.starts_with = starts_with;\n\texports.ends_with = ends_with;\n\texports.repeat = repeat;\n\texports.is_blank = is_blank;\n\texports.zip = zip;\n\texports.extend = extend;\n\tvar exists = function exists(what) {\n\t\treturn typeof what !== 'undefined';\n\t};\n\t\n\texports.exists = exists;\n\t// if the string starts with the substring\n\t\n\tfunction starts_with(string, what) {\n\t\treturn string.indexOf(what) === 0;\n\t}\n\t\n\t// if the string ends with the substring\n\t\n\tfunction ends_with(string, what) {\n\t\tvar index = string.lastIndexOf(what);\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\t\treturn index === string.length - what.length;\n\t}\n\t\n\t// repeat string N times\n\t\n\tfunction repeat(what, times) {\n\t\tvar result = '';\n\t\twhile (times > 0) {\n\t\t\tresult += what;\n\t\t\ttimes--;\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t// if the text is blank\n\t\n\tfunction is_blank(text) {\n\t\treturn !text.replace(/\\s/g, '');\n\t}\n\t\n\t// zips two arrays\n\t\n\tfunction zip(a, b) {\n\t\treturn a.map(function (_, index) {\n\t\t\treturn [a[index], b[index]];\n\t\t});\n\t}\n\t\n\t// extends the first object with\n\t\n\tfunction extend(_x, _x2, _x3) {\n\t\tvar _this = this,\n\t\t    _arguments = arguments;\n\t\n\t\tvar _again = true;\n\t\n\t\t_function: while (_again) {\n\t\t\tvar to = _x,\n\t\t\t    from = _x2,\n\t\t\t    or_more = _x3;\n\t\t\tparameters = last = intermediary_result = _iteratorNormalCompletion = _didIteratorError = _iteratorError = undefined;\n\t\t\t_again = false;\n\t\n\t\t\tvar parameters = Array.prototype.slice.call(_arguments, 0);\n\t\n\t\t\tif (exists(or_more)) {\n\t\t\t\tvar last = parameters.pop();\n\t\t\t\tvar intermediary_result = extend.apply(_this, parameters);\n\t\t\t\t// pass undefined as the third argument because of either Babel.js bug, or some other bug\n\t\t\t\t// (the third argument is supplied and is equal to the second argument which is weird)\n\t\t\t\t_this = undefined;\n\t\t\t\t_arguments = [_x = intermediary_result, _x2 = last, _x3 = undefined];\n\t\t\t\t_again = true;\n\t\t\t\tcontinue _function;\n\t\t\t}\n\t\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = Object.keys(from)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar key = _step.value;\n\t\n\t\t\t\t\tif (typeof from[key] === 'object' && exists(to[key])) {\n\t\t\t\t\t\tto[key] = extend(to[key], from[key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tto[key] = from[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator['return']) {\n\t\t\t\t\t\t_iterator['return']();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn to;\n\t\t}\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _helpers = __webpack_require__(1);\n\t\n\t// tabulation utilities\n\t\n\tvar Tabulator = (function () {\n\t\tfunction Tabulator(tab) {\n\t\t\t_classCallCheck(this, Tabulator);\n\t\n\t\t\tthis.tab = tab;\n\t\t}\n\t\n\t\t_createClass(Tabulator, [{\n\t\t\tkey: 'reduce_indentation',\n\t\n\t\t\t// remove some tabs in the beginning\n\t\t\tvalue: function reduce_indentation(line) {\n\t\t\t\tvar how_much = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];\n\t\n\t\t\t\treturn line.substring(this.tab.symbol.length * how_much);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'calculate_indentation',\n\t\n\t\t\t// how many \"tabs\" are there before content of this line\n\t\t\tvalue: function calculate_indentation(line) {\n\t\t\t\tvar matches = line.match(this.tab.regexp);\n\t\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\n\t\t\t\treturn matches[0].length / this.tab.symbol.length;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'extract_tabulation',\n\t\t\tvalue: function extract_tabulation(lines) {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tlines = lines\n\t\t\t\t// preserve line indexes\n\t\t\t\t.map(function (line, index) {\n\t\t\t\t\treturn { line: line, index: index };\n\t\t\t\t})\n\t\t\t\t// filter out blank lines\n\t\t\t\t.filter(function (line) {\n\t\t\t\t\treturn !(0, _helpers.is_blank)(line.line);\n\t\t\t\t});\n\t\n\t\t\t\t// calculate each line's indentation\n\t\t\t\tlines.forEach(function (line) {\n\t\t\t\t\tline.original_line = line.line;\n\t\t\t\t\tline.tabs = _this.calculate_indentation(line.line);\n\t\t\t\t\tline.line = _this.reduce_indentation(line.line, line.tabs);\n\t\n\t\t\t\t\t// check for messed up space indentation\n\t\t\t\t\tif ((0, _helpers.starts_with)(line.line, ' ')) {\n\t\t\t\t\t\tthrow new Error('Invalid indentation (some extra leading spaces) at line ' + line.index + ': \"' + line.original_line + '\"');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// get the minimum indentation level\n\t\t\t\tvar minimum_indentation = lines.reduce(function (minimum, line) {\n\t\t\t\t\treturn Math.min(minimum, line.tabs);\n\t\t\t\t}, Infinity);\n\t\n\t\t\t\t// if there is initial tabulation missing - add it\n\t\t\t\tif (minimum_indentation === 0) {\n\t\t\t\t\tlines.forEach(function (line) {\n\t\t\t\t\t\tline.tabs++;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// if there is excessive tabulation - trim it\n\t\t\t\telse if (minimum_indentation > 1) {\n\t\t\t\t\tlines.forEach(function (line) {\n\t\t\t\t\t\tline.tabs -= minimum_indentation - 1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\t// check for messed up tabulation\n\t\t\t\tif (lines[0].tabs !== 1) {\n\t\t\t\t\tthrow new Error('Invalid indentation at line ' + lines[0].index + ': \"' + lines[0].original_line + '\"');\n\t\t\t\t}\n\t\n\t\t\t\treturn lines;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Tabulator;\n\t})();\n\t\n\texports['default'] = Tabulator;\n\t\n\t// decide whether it's tabs or spaces\n\tTabulator.determine_tabulation = function (lines) {\n\t\tvar substract = function substract(pair) {\n\t\t\treturn pair[0] - pair[1];\n\t\t};\n\t\n\t\tfunction calculate_leading_spaces(line) {\n\t\t\tvar counter = 0;\n\t\t\tline.replace(/^( )+/g, function (match) {\n\t\t\t\tcounter = match.length;\n\t\t\t});\n\t\t\treturn counter;\n\t\t}\n\t\n\t\t// take all meaningful lines\n\t\tlines = lines.filter(function (line) {\n\t\t\treturn !(0, _helpers.is_blank)(line);\n\t\t});\n\t\n\t\t// has to be at least two of them\n\t\tif (lines.length < 2) {\n\t\t\tthrow new Error('Couldn\\'t decide on tabulation type. Not enough lines.');\n\t\t}\n\t\n\t\t// if we're using tabs for tabulation\n\t\tif ((0, _helpers.starts_with)(lines[1], '\\t')) {\n\t\t\tvar tab = {\n\t\t\t\tsymbol: '\\t',\n\t\t\t\tregexp: new RegExp('^(\\t)+', 'g')\n\t\t\t};\n\t\n\t\t\treturn tab;\n\t\t}\n\t\n\t\t// take the first two lines,\n\t\t// calculate their indentation,\n\t\t// substract it and you've got the tab width\n\t\tvar tab_width = Math.abs(substract(lines.slice(0, 2).map(calculate_leading_spaces)));\n\t\n\t\tif (tab_width === 0) {\n\t\t\tthrow new Error('Couldn\\'t decide on tabulation type. Invalid tabulation.');\n\t\t}\n\t\n\t\tvar symbol = (0, _helpers.repeat)(' ', tab_width);\n\t\n\t\tvar spaced_tab = {\n\t\t\tsymbol: symbol,\n\t\t\tregexp: new RegExp('^(' + symbol + ')+', 'g')\n\t\t};\n\t\n\t\treturn spaced_tab;\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-styling.minified.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ac8674723e6f1f30b63a\n **/","import { exists, starts_with, ends_with, is_blank, zip, extend } from './helpers'\r\nimport Tabulator from './tabulator'\r\n\r\n// using ES6 template strings\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\r\nexport default function styler(strings, ...values)\r\n{\r\n\tlet style = ''\r\n\r\n\t// restore the whole string from \"strings\" and \"values\" parts\r\n\tlet i = 0\r\n\twhile (i < strings.length)\r\n\t{\r\n\t\tstyle += strings[i]\r\n\t\tif (exists(values[i]))\r\n\t\t{\r\n\t\t\tstyle += values[i]\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn parse_style_json_object(style)\r\n}\r\n\r\n// converts text to JSON object\r\nfunction parse_style_json_object(text)\r\n{\r\n\t// remove multiline comments\r\n\ttext = text.replace(/\\/\\*([\\s\\S]*?)\\*\\//g, '')\r\n\r\n\t// ignore curly braces for now.\r\n\t// maybe support curly braces along with tabulation in future\r\n\ttext = text.replace(/[\\{\\}]/g, '')\r\n\r\n\tconst lines = text.split('\\n')\r\n\r\n\t// helper class for dealing with tabulation\r\n\tconst tabulator = new Tabulator(Tabulator.determine_tabulation(lines))\r\n\r\n\t// parse text into JSON object\r\n\tconst style_json = parse_node_json([], tabulator.extract_tabulation(lines))\r\n\r\n\t// expand \"modifier\" style classes\r\n\treturn expand_modifier_style_classes(style_json)\r\n}\r\n\r\n// (recursive function)\r\n// parse child nodes' lines (and this node's styles) into this node's style JSON object\r\nfunction parse_node_json(styles, children_lines)\r\n{\r\n\t// transform this node's style lines from text to JSON properties and their values\r\n\tconst style_object = styles.map(function(style)\r\n\t{\r\n\t\tconst parts = style.split(':')\r\n\r\n\t\tlet key   = parts[0].trim()\r\n\t\tlet value = parts[1].trim()\r\n\r\n\t\t// support old CSS syntax\r\n\t\tvalue = value.replace(/;$/, '')\r\n\r\n\t\t// transform dashed key to camelCase key (it's required by React)\r\n\t\tkey = key.replace(/([-]{1}[a-z]{1})/g, character => character.substring(1).toUpperCase())\r\n\r\n\t\treturn { key, value }\r\n\t})\r\n\t// combine the styles into a JSON object\r\n\t.reduce(function(styles, style)\r\n\t{\r\n\t\tstyles[style.key] = style.value\r\n\t\treturn styles\r\n\t}, \r\n\t{})\r\n\r\n\t// parse child nodes and add them to this node's JSON object\r\n\treturn extend(style_object, parse_lines(children_lines))\r\n}\r\n\r\n// parses lines of text into a JSON object\r\n// (recursive function)\r\nfunction parse_lines(lines)\r\n{\r\n\t// return empty object if there are no lines\r\n\tif (lines.length === 0)\r\n\t{\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// remove single line comments\r\n\tlines.forEach(function(line)\r\n\t{\r\n\t\t// remove single line comments\r\n\t\tline.line = line.line.replace(/\\/\\/.*/, '')\r\n\t\t// remove any trailing whitespace\r\n\t\tline.line = line.line.trim()\r\n\t})\r\n\r\n\t// filter out blank lines\r\n\tlines = lines.filter(line => !is_blank(line.line))\r\n\r\n\t// determine lines with indentation = 1 (child node entry lines)\r\n\tconst node_entry_lines = lines.map((line, index) => \r\n\t\t{\r\n\t\t\treturn { tabs: line.tabs, index }\r\n\t\t})\r\n\t\t.filter(line => line.tabs === 1)\r\n\t\t.map(line => line.index)\r\n\r\n\t// deduce corresponding child node ending lines\r\n\tconst node_ending_lines = node_entry_lines.map(line_index => line_index - 1)\r\n\tnode_ending_lines.shift()\r\n\tnode_ending_lines.push(lines.length - 1)\r\n\r\n\t// each node boundaries in terms of starting line index and ending line index\r\n\tconst from_to = zip(node_entry_lines, node_ending_lines)\r\n\r\n\t// now lines are split by nodes\r\n\tconst each_node_lines = from_to.map(from_to => lines.slice(from_to[0], from_to[1] + 1))\r\n\r\n\treturn each_node_lines.map(function(lines)\r\n\t{\r\n\t\t// the first line is the node's name\r\n\t\tlet name = lines.shift().line\r\n\r\n\t\t// is it a \"modifier\" style class\r\n\t\tlet is_a_modifier = false\r\n\r\n\t\t// detect modifier style classes\r\n\t\tif (starts_with(name, '&'))\r\n\t\t{\r\n\t\t\tname = name.substring('&'.length)\r\n\t\t\tis_a_modifier = true\r\n\t\t}\r\n\r\n\t\t// support old-school CSS syntax\r\n\t\tif (starts_with(name, '.'))\r\n\t\t{\r\n\t\t\tname = name.substring('.'.length)\r\n\t\t}\r\n\r\n\t\t// if someone forgot a trailing colon in the style class name - trim it\r\n\t\t// (or maybe these are Python people)\r\n\t\tif (ends_with(name, ':'))\r\n\t\t{\r\n\t\t\tname = name.substring(0, name.length - ':'.length)\r\n\t\t\t// throw new Error(`Remove the trailing colon at line: ${original_line}`)\r\n\t\t}\r\n\r\n\t\t// node's own styles\r\n\t\tlet styles = lines.filter(function(line)\r\n\t\t{\r\n\t\t\t// own styles always have indentation of 2\r\n\t\t\tif (line.tabs !== 2)\r\n\t\t\t{\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\r\n\t\t\t// detect generic css style line\r\n\t\t\tconst colon_index = line.line.indexOf(':')\r\n\t\t\treturn (colon_index > 0 && colon_index < line.line.length - 1) && !starts_with(line.line, '@')\r\n\t\t})\r\n\r\n\t\t// this node child nodes and all their children, etc\r\n\t\tlet children_lines = lines.filter(function(line)\r\n\t\t{\r\n\t\t\treturn styles.indexOf(line) < 0\r\n\t\t})\r\n\r\n\t\t// convert from line info to lines\r\n\t\tstyles = styles.map(line => line.line)\r\n\t\tchildren_lines.forEach(line => line.tabs--)\r\n\r\n\t\t// generate JSON object for this node\r\n\t\tconst json = parse_node_json(styles, children_lines)\r\n\r\n\t\tif (is_a_modifier)\r\n\t\t{\r\n\t\t\tjson._is_a_modifier = true\r\n\t\t}\r\n\r\n\t\treturn { name, json }\r\n\t})\r\n\t.reduce(function(nodes, node)\r\n\t{\r\n\t\tnodes[node.name] = node.json\r\n\t\treturn nodes\r\n\t}, \r\n\t{})\r\n}\r\n\r\n// expand modifier style classes\r\nfunction expand_modifier_style_classes(node)\r\n{\r\n\tconst style = get_node_style(node)\r\n\r\n\tObject.keys(node)\r\n\t// get all modifier style class nodes\r\n\t.filter(name => typeof(node[name]) === 'object' && node[name]._is_a_modifier)\r\n\t// for each modifier style class node\r\n\t.forEach(function(name)\r\n\t{\r\n\t\t// delete the modifier flags\r\n\t\tdelete node[name]._is_a_modifier\r\n\r\n\t\t// include parent node styles into the modifier style class node\r\n\t\tnode[name] = extend({}, style, node[name])\r\n\t})\r\n\r\n\tObject.keys(node)\r\n\t// get all style class nodes\r\n\t.filter(name => typeof(node[name]) === 'object')\r\n\t// for each style class node\r\n\t.forEach(function(name)\r\n\t{\r\n\t\t// recurse\r\n\t\texpand_modifier_style_classes(node[name])\r\n\t})\r\n\r\n\treturn node\r\n}\r\n\r\n// extracts root css styles of this style class node\r\nfunction get_node_style(node)\r\n{\r\n\treturn Object.keys(node)\r\n\t// get all CSS styles of this style class node\r\n\t.filter(property => typeof(node[property]) !== 'object')\r\n\t// for each CSS style of this style class node\r\n\t.reduce(function(style, style_property)\r\n\t{\r\n\t\tstyle[style_property] = node[style_property]\r\n\t\treturn style\r\n\t}, \r\n\t{})\r\n}\n\n\n/** WEBPACK FOOTER **\n ** G:/work/react-styling/source/index.js\n **/","// if the variable is defined\nexport const exists = what => typeof what !== 'undefined'\n\n// if the string starts with the substring\nexport function starts_with(string, what)\n{\n\treturn string.indexOf(what) === 0\n}\n\n// if the string ends with the substring\nexport function ends_with(string, what)\n{\n\tconst index = string.lastIndexOf(what)\n\tif (index < 0)\n\t{\n\t\treturn\n\t}\n\treturn index === string.length - what.length\n}\n\n// repeat string N times\nexport function repeat(what, times)\n{\n\tlet result = ''\n\twhile (times > 0)\n\t{\n\t\tresult += what\n\t\ttimes--\n\t}\n\treturn result\n}\n\n// if the text is blank\nexport function is_blank(text)\n{\n\treturn !text.replace(/\\s/g, '')\n}\n\n// zips two arrays\nexport function zip(a, b)\n{\n\treturn a.map(function(_, index) \n\t{\n\t\treturn [a[index], b[index]]\n\t})\n}\n\n// extends the first object with \nexport function extend(to, from, or_more)\n{\n\tconst parameters = Array.prototype.slice.call(arguments, 0)\n\n\tif (exists(or_more))\n\t{\n\t\tconst last = parameters.pop()\n\t\tconst intermediary_result = extend.apply(this, parameters)\n\t\t// pass undefined as the third argument because of either Babel.js bug, or some other bug\n\t\t// (the third argument is supplied and is equal to the second argument which is weird)\n\t\treturn extend(intermediary_result, last, undefined)\n\t}\n\n\tfor (let key of Object.keys(from))\n\t{\n\t\tif (typeof from[key] === 'object' && exists(to[key]))\n\t\t{\n\t\t\tto[key] = extend(to[key], from[key])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tto[key] = from[key]\n\t\t}\n\t}\n\n\treturn to\n}\n\n\n/** WEBPACK FOOTER **\n ** G:/work/react-styling/source/helpers.js\n **/","import { starts_with, is_blank, repeat } from './helpers'\n\n// tabulation utilities\nexport default class Tabulator\n{\n\tconstructor(tab)\n\t{\n\t\tthis.tab = tab\n\t}\n\n\t// remove some tabs in the beginning\n\treduce_indentation(line, how_much = 1)\n\t{\n\t\treturn line.substring(this.tab.symbol.length * how_much)\n\t}\n\n\t// how many \"tabs\" are there before content of this line\n\tcalculate_indentation(line)\n\t{\n\t\tconst matches = line.match(this.tab.regexp)\n\n\t\tif (!matches)\n\t\t{\n\t\t\treturn 0\n\t\t}\n\n\t\treturn matches[0].length / this.tab.symbol.length\n\t}\n\n\textract_tabulation(lines)\n\t{\n\t\tlines = lines\n\t\t\t// preserve line indexes\n\t\t\t.map((line, index) =>\n\t\t\t{\n\t\t\t\treturn { line, index }\n\t\t\t})\n\t\t\t// filter out blank lines\n\t\t\t.filter(line => !is_blank(line.line))\n\n\t\t// calculate each line's indentation\n\t\tlines.forEach(line => \n\t\t{\n\t\t\tline.original_line = line.line\n\t\t\tline.tabs = this.calculate_indentation(line.line)\n\t\t\tline.line = this.reduce_indentation(line.line, line.tabs)\n\n\t\t\t// check for messed up space indentation\n\t\t\tif (starts_with(line.line, ' '))\n\t\t\t{\n\t\t\t\tthrow new Error(`Invalid indentation (some extra leading spaces) at line ${line.index}: \"${line.original_line}\"`)\n\t\t\t}\n\t\t})\n\n\t\t// get the minimum indentation level\n\t\tconst minimum_indentation = lines\n\t\t\t.reduce((minimum, line) => Math.min(minimum, line.tabs), Infinity)\n\n\t\t// if there is initial tabulation missing - add it\n\t\tif (minimum_indentation === 0)\n\t\t{\n\t\t\tlines.forEach(function(line)\n\t\t\t{\n\t\t\t\tline.tabs++\n\t\t\t})\n\t\t}\n\t\t// if there is excessive tabulation - trim it\n\t\telse if (minimum_indentation > 1)\n\t\t{\n\t\t\tlines.forEach(function(line)\n\t\t\t{\n\t\t\t\tline.tabs -= minimum_indentation - 1\n\t\t\t})\n\t\t}\n\n\t\t// check for messed up tabulation\n\t\tif (lines[0].tabs !== 1)\n\t\t{\n\t\t\tthrow new Error(`Invalid indentation at line ${lines[0].index}: \"${lines[0].original_line}\"`)\n\t\t}\n\n\t\treturn lines\n\t}\n}\n\n// decide whether it's tabs or spaces\nTabulator.determine_tabulation = function(lines)\n{\n\tconst substract = pair => pair[0] - pair[1]\n\n\tfunction calculate_leading_spaces(line)\n\t{\n\t\tlet counter = 0\n\t\tline.replace(/^( )+/g, function(match) { counter = match.length })\n\t\treturn counter\n\t}\n\n\t// take all meaningful lines\n\tlines = lines.filter(line => !is_blank(line))\n\n\t// has to be at least two of them\n\tif (lines.length < 2)\n\t{\n\t\tthrow new Error(`Couldn't decide on tabulation type. Not enough lines.`)\n\t}\n\n\t// if we're using tabs for tabulation\n\tif (starts_with(lines[1], '\\t'))\n\t{\n\t\tconst tab = \n\t\t{\n\t\t\tsymbol: '\\t',\n\t\t\tregexp: new RegExp(`^(\\t)+`, 'g')\n\t\t}\n\n\t\treturn tab\n\t}\n\n\t// take the first two lines,\n\t// calculate their indentation,\n\t// substract it and you've got the tab width\n\tconst tab_width = Math.abs(substract(\n\t\tlines\n\t\t\t.slice(0, 2)\n\t\t\t.map(calculate_leading_spaces)\n\t))\n\n\tif (tab_width === 0)\n\t{\n\t\tthrow new Error(`Couldn't decide on tabulation type. Invalid tabulation.`)\n\t}\n\n\tconst symbol = repeat(' ', tab_width)\n\n\tconst spaced_tab = \n\t{\n\t\tsymbol: symbol,\n\t\tregexp: new RegExp(`^(${symbol})+`, 'g')\n\t}\n\n\treturn spaced_tab\n}\n\n\n/** WEBPACK FOOTER **\n ** G:/work/react-styling/source/tabulator.js\n **/"],"sourceRoot":""}